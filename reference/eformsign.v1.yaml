openapi: 3.0.0
info:
  title: eformsign
  version: '2.0'
  contact:
    name: eformsign Service Team
    email: eformsign@forcs.com
    url: www.eformsign.com
  description: eformsign이 제공하는 API를 통해 eformsign의 기능을 고객의 시스템/서비스에서 호출해 사용할 수 있습니다.
  termsOfService: 'https://www.eformsign.com/eform/account/terms.html?tab=0'
servers:
  - url: 'https://api.eformsign.com/v2.0'
paths:
  /api_auth/access_token:
    post:
      operationId: OPA2_001
      description: API 키로 Access Token을 발급받습니다.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
          required: true
        - schema:
            type: string
          in: header
          name: eformsign_signature
          description: execution_time 값을 private Key로 서명한 값
          required: true
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer <api key>
      summary: Access Token 발급
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: ''
              properties:
                execution_time:
                  type: integer
                  format: int64
                  description: 'API 호출 시간(현재 시간)으로, 서버시간의 +/- 30초 내에서만 호출이 유효하다.'
                member_id:
                  type: string
                  description: '회사 멤버의 ID로, 회사 멤버의 Access token을 발급받을 때 추가로 입력한다.'
              required:
                - execution_time
            examples: {}
          application/xml:
            schema:
              type: object
              properties: {}
        description: ''
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  '':
                    type: string
    parameters: []
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      x-examples:
        Alice Smith:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
  securitySchemes: {}
